// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model organization {
  id         Int          @id @default(autoincrement())
  org_name   String       @unique
  timezone   String
  task_board task_board[]
}

model task_board {
  id              Int             @id @default(autoincrement())
  task_board_name String          @unique
  // team_user_ids   Int[]
  // admin_ids       Int[]
  task            task[]
  org             organization    @relation(fields: [org_id], references: [id])
  org_id          Int
  can_create      can_create_enum
  customisation   Json            @db.JsonB
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt
  created_by      Int
}

enum can_create_enum {
  EVERYONE
  ADMIN
}

model task {
  id                   Int                 @id @default(autoincrement())
  task_title           String              @unique
  task_description     String
  task_file_id         String[]
  task_frequency       task_frequency_enum
  syear                Int?
  smonth               Int?
  sdate                Int?
  shour                Int?
  sminute              Int?
  eyear                Int?
  emonth               Int?
  edate                Int?
  ehour                Int?
  eminute              Int?
  task_start_date_time String?
  task_end_date_time   String?
  task_coordinates     Float[]
  task_location        String
  task_board           task_board          @relation(fields: [task_board_id], references: [id])
  task_board_id        Int
  sub_task             sub_task[]
  repeat_details       repeat_details?
  task_status          String
  user_ids             Int[]
  created_at           DateTime            @default(now())
  updated_at           DateTime            @updatedAt
  created_by           Int
  task_tag             task_tag[]
}

enum task_frequency_enum {
  ONEOFF
  RECURRING
}

model sub_task {
  id         Int      @id @default(autoincrement())
  task       task     @relation(fields: [task_id], references: [id])
  task_id    Int
  eyear      Int
  emonth     Int
  edate      Int
  ehour      Int
  eminute    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  created_by Int
}

enum repeat_type_enum {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

model repeat_details {
  id               Int              @id @default(autoincrement())
  stop_repeat      DateTime?
  repeat_type      repeat_type_enum
  task             task             @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task_id          Int              @unique
  how_often_repeat Int
  day_of_week      Int[]
  day_of_month     Int?
  week_of_month    Int?
  month_of_year    Int?
}

model tag {
  id        Int        @id @default(autoincrement())
  tag_name  String
  tag_color String
  task_tag  task_tag[]
}

model task_tag {
  task    task @relation(fields: [task_id], references: [id])
  task_id Int
  tag     tag  @relation(fields: [tag_id], references: [id])
  tag_id  Int

  @@id([task_id, tag_id])
}
