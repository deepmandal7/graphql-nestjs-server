#import User from schema.graphql
#import TimeEntry, CreateTimeEntryInput from time_entry.graphql
#import EmployeeBreak, CreateEmployeeBreakInput from employee_breaks.graphql

enum timesheet_entry_status_enum {
  PENDING
  APPROVED
  REJECTED
}

type TimesheetEntry {
  id: ID!
  entry_date: DateTime!
  timesheet_clockin_time: String!
  timesheet_clockout_time: String
  # shift: Shift
  status: timesheet_entry_status_enum
  user: User!
  time_entry: [TimeEntry!]!
  employee_break: [EmployeeBreak]!
  created_by: User!
}

input CreateTimesheetEntryInput {
  timesheet_id: Int!
  entry_date: String!
  # shift: Int
  user_id: Int!
  timezone: String!
  time_entry: [CreateTimeEntryInput!]!
  employee_break: [CreateEmployeeBreakInput]
  created_by_id: Int!
}

input UpdateTimesheetEntryInput {
  id: Int!
  entry_date: String
  status: timesheet_entry_status_enum
}

input QueryTimesheetEntryInput {
  timesheetId: Int!
  userId: Int
  status: timesheet_entry_status_enum
  date1: String
  date2: String
}

type Query {
  getAllTimesheetEntry(
    take: Int!
    orgId: Int!
    where: QueryTimesheetEntryInput!
    cursor: Int
    searchText: String
  ): [TimesheetEntry]!
  getTimesheetEntry(id: Int!): TimesheetEntry
}

type Mutation {
  createTimesheetEntry(input: CreateTimesheetEntryInput!): TimesheetEntry!
  updateTimesheetEntry(input: UpdateTimesheetEntryInput!): TimesheetEntry!
  removeTimesheetEntry(id: Int!): TimesheetEntry
}
