#import SubTask, CreateSubTaskInput from sub_task.graphql
#import User, Tag from schema.graphql

scalar DateTime

enum TaskFrequencyEnum {
  ONEOFF
  RECURRING
}

enum RepeatTypeEnum {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

# Repeat Details Type
type RepeatDetailsType {
  id: Int!
  how_often_repeat: Int!
  stop_repeat: DateTime
  repeat_type: RepeatTypeEnum
  day_of_week: [Int!]
  day_of_month: Int
  week_of_month: Int
  month_of_year: Int
}

# Repeat Details Input
input RepeatDetailsInput {
  how_often_repeat: Int!
  stop_repeat: DateTime
  repeat_type: RepeatTypeEnum
  day_of_week: [Int!]
  day_of_month: Int
  week_of_month: Int
  month_of_year: Int
}

# Task type
type Task {
  id: ID!
  task_title: String
  task_description: String
  task_file_id: [String]
  task_frequency: TaskFrequencyEnum
  syear: Int
  smonth: Int
  sdate: Int
  shour: Int
  sminute: Int
  eyear: Int
  emonth: Int
  edate: Int
  ehour: Int
  eminute: Int
  task_coordinates: String
  task_location: String
  task_board_id: Int
  repeat_details: RepeatDetailsType
  task_status: String
  user: [User!]
  created_by: Int
  task_tag: [Tag!]
  created_at: DateTime
  updated_at: DateTime
  sub_task: [SubTask]
}

input CreateTaskInput {
  task_title: String
  task_description: String
  task_file_id: [String]
  task_frequency: TaskFrequencyEnum
  syear: Int
  smonth: Int
  sdate: Int
  shour: Int
  sminute: Int
  eyear: Int
  emonth: Int
  edate: Int
  ehour: Int
  eminute: Int
  task_coordinates: String
  task_location: String
  task_board_id: Int
  repeat_details: RepeatDetailsInput
  user_ids: [Int!]
  created_by: Int
  tag_ids: [Int]
  sub_task: [CreateSubTaskInput]
}

input UpdateTaskInput {
  id: Int!
  task_title: String
  task_description: String
  task_file_id: [String]
  task_frequency: TaskFrequencyEnum
  syear: Int
  smonth: Int
  sdate: Int
  shour: Int
  sminute: Int
  eyear: Int
  emonth: Int
  edate: Int
  ehour: Int
  eminute: Int
  task_coordinates: String
  task_location: String
  task_status: String
}

input QueryTaskInput {
  taskBoardId: Int
  isUnassigned: Boolean
  userIds: [Int]
  userId: Int
  dates: String
  startDate: String
  fromStartYear: Int
  fromStartMonth: Int
  fromStartDate: Int
  toStartYear: Int
  toStartMonth: Int
  toStartDate: Int
  tagIds: [Int]
  createdBy: Int
  taskStatus: [String]
}

type Query {
  getTasks(
    take: Int!
    orgId: Int!
    cursor: Int
    searchText: String
    queryTaskInput: QueryTaskInput
  ): [Task]!
  getTask(id: Int!): Task
  getUserTasks(userId: Int!): [Task]!
}

type Mutation {
  createTask(createTaskInput: CreateTaskInput!): Task!
  createTasks(createTaskInput: [CreateTaskInput]!): [Task!]!
  updateTask(updateTaskInput: UpdateTaskInput!): Task!
  removeTask(id: Int!): Task
}
