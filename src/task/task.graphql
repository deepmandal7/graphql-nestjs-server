#import User, Tag from schema.graphql
#import SubTask, CreateSubTaskInput from sub_task.graphql
#import TaskRepeatDetail, CreateTaskRepeatDetailInput from task_repeat_details.graphql

scalar DateTime

enum TaskFrequencyEnum {
  ONEOFF
  RECURRING
}

# Task type
type Task {
  id: ID!
  task_title: String
  task_description: String
  task_file_id: [String]
  task_frequency: TaskFrequencyEnum
  task_start_date_time: DateTime
  task_end_date_time: DateTime
  task_coordinates: String
  task_location: String
  task_board_id: Int
  repeat_details: TaskRepeatDetail
  task_status: String
  user: [User!]
  created_by: Int!
  task_tag: [Tag!]
  created_at: DateTime
  updated_at: DateTime
  sub_task: [SubTask]
}

input CreateTaskInput {
  task_title: String
  task_description: String
  task_file_id: [String]
  task_frequency: TaskFrequencyEnum
  task_start_date_time: DateTime
  task_end_date_time: DateTime
  task_coordinates: String
  task_location: String
  task_board_id: Int
  repeat_details: CreateTaskRepeatDetailInput
  user_ids: [Int!]
  created_by: Int!
  tag_ids: [Int!]
  sub_task: [CreateSubTaskInput]
}

input UpdateTaskInput {
  id: Int!
  task_title: String
  task_description: String
  task_file_id: [String]
  task_frequency: TaskFrequencyEnum
  task_start_date_time: DateTime
  task_end_date_time: DateTime
  task_coordinates: String
  task_location: String
  task_status: String
}

input QueryTaskInput {
  taskBoardId: Int
  isUnassigned: Boolean
  userIds: [Int]
  userId: Int
  startDate: String
  endDate: String
  filter_date_time: DateTime
  next_date_time: DateTime
  tagIds: [Int]
  createdBy: Int
  taskStatus: [String]
}

type Query {
  getTasks(
    take: Int!
    orgId: Int!
    cursor: Int
    searchText: String
    queryTaskInput: QueryTaskInput
  ): [Task]!
  getTask(id: Int!): Task
  getUserTasks(userId: Int!): [Task]!
}

type Mutation {
  createTask(createTaskInput: CreateTaskInput!): Task!
  createTasks(createTaskInput: [CreateTaskInput]!): [Task!]!
  updateTask(updateTaskInput: UpdateTaskInput!): Task!
  removeTask(id: Int!): Task
}
