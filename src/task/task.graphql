scalar DateTime

enum TaskFrequencyEnum {
  ONEOFF
  RECURRING
}

enum RepeatTypeEnum {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

# Repeat Details Type
type RepeatDetailsType {
  id: Int!
  how_often_repeat: Int!
  stop_repeat: DateTime
  repeat_type: RepeatTypeEnum
  day_of_week: [Int!]
  day_of_month: Int
  week_of_month: Int
  month_of_year: Int
}

# Repeat Details Input
input RepeatDetailsInput {
  how_often_repeat: Int!
  stop_repeat: DateTime
  repeat_type: RepeatTypeEnum
  day_of_week: [Int!]
  day_of_month: Int
  week_of_month: Int
  month_of_year: Int
}

# Task type
type Task {
  id: ID!
  task_title: String!
  task_description: String!
  task_file_id: [String]
  task_frequency: TaskFrequencyEnum
  task_start_utc_date_time: DateTime
  task_end_utc_date_time: DateTime
  task_coordinates: String
  task_location: String
  task_board_id: Int
  repeat_details: RepeatDetailsType
  created_by: Int
  created_at: DateTime
  updated_at: DateTime
}

input CreateTaskInput {
  task_title: String!
  task_description: String!
  task_file_id: [String]
  task_frequency: TaskFrequencyEnum
  task_start_utc_date_time: DateTime
  task_end_utc_date_time: DateTime
  task_coordinates: String
  task_location: String
  task_board_id: Int
  repeat_details: RepeatDetailsInput
  task_status: String
  created_by: Int
  created_at: DateTime
  updated_at: DateTime
}

input UpdateTaskInput {
  id: Int!
}

type Query {
  tasks(take: Int!, cursor: Int): [Task]!
  task(id: Int!): Task
}

type Mutation {
  createTask(createTaskInput: CreateTaskInput!): Task!
  updateTask(updateTaskInput: UpdateTaskInput!): Task!
  removeTask(id: Int!): Task
}
