type Owner {
  id: ID!
  name: String!
  pets: [Pet]
}

type Pet {
  id: ID!
  name: String!
  owner: Owner
  ownerId: ID
}

input NewOwner {
  name: String!
}

input NewPet {
  name: String!
  ownerId: ID!
}

input UpdatePet {
  name: String!
  ownerId: ID!
}

input UpdateOwner {
  id: ID!
  pets: [ID!]!
}

type Query {
  owner(id: Int!): Owner!
  owners(skip: Int!, take: Int!): [Owner!]!
  pets: [Pet!]!
}

type Mutation {
  createOwner(createOwnerInput: NewOwner!): Owner!
  updateOwner(input: UpdateOwner!): Owner!
  deleteOwner(id: ID!): Owner!
  createPet(input: NewPet!): Pet!
  updatePet(input: UpdatePet!): Pet!
  deletePet(id: ID!): Pet!
}
